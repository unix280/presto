name: Build and Publish Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 0.291)'
        required: true
      skip_maven_build:
        description: 'Skip Maven build (true/false)'
        required: true
        default: false
        type: boolean
      skip_docker_build:
        description: 'Skip Docker build (true/false)'
        required: true
        default: false
        type: boolean

env:
  VERSION: ${{ github.event.inputs.version }}
  DOCKER_REPO: unidevel/test

jobs:
  maven-build:
    if: ${{ !inputs.skip_maven_build }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.VERSION }}

      - name: Set up JDK 11
        uses: actions/setup-java@v4
        with:
          java-version: '11'
          distribution: 'temurin'
          cache: 'maven'

      - name: Maven build
        run: mvn clean install -DskipTests

      - name: Upload artifacts
        uses: actions/upload-artifact@v4
        with:
          name: presto-artifacts
          path: |
            presto-server/target/presto-server-*.tar.gz
            presto-cli/target/presto-cli-*-executable.jar

  docker-build:
    needs: [maven-build]
    if: ${{ always() && !inputs.skip_docker_build && (inputs.skip_maven_build || success()) }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: presto-artifacts
          path: ./

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.9.0

      - name: Create and use builder
        run: |
          docker buildx create --name container --use
          docker buildx inspect --bootstrap

      - name: Move artifacts to docker directory
        run: |
          mv ./presto-server/target/presto-server-*.tar.gz docker/
          mv ./presto-cli/target/presto-cli-*-executable.jar docker/

      - name: Build Docker image
        uses: docker/build-push-action@v6
        with:
          context: docker
          platforms: linux/amd64,linux/arm64
          file: docker/Dockerfile
          push: false
          build-args: |
            PRESTO_VERSION=${{ env.VERSION }}
          tags: ${{ env.DOCKER_REPO }}:${{ env.VERSION }}
          outputs: type=tar,dest=image.tar

      - name: Upload Docker image
        uses: actions/upload-artifact@v4
        with:
          name: docker-image
          path: image.tar
          retention-days: 1

  docker-push:
    needs: [docker-build]
    if: ${{ always() && (inputs.skip_docker_build || success()) }}
    runs-on: ubuntu-latest
    steps:
      - name: Download Docker image
        uses: actions/download-artifact@v4
        with:
          name: docker-image
          path: ./

      - name: Load Docker image
        run: |
          docker load --input image.tar

      - name: Push Docker image
        run: |
          docker push ${{ env.DOCKER_REPO }}:${{ env.VERSION }}
