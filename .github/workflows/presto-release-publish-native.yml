name: Presto Stable - Publish Native Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 0.291)'
        required: true
      publish_as_latest:
        description: 'Also publish as latest version'
        type: boolean
        default: true
        required: false

env:
  VERSION: ${{ github.event.inputs.version }}
  ORG_NAME: unidevel
  IMAGE_NAME: presto-native

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.VERSION }}
          submodules: true

      - name: Initialize Prestissimo submodules
        run: |
          cd presto-native-execution && make submodules

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: |
            /tmp/deps-image.tar
            /tmp/runtime-image.tar
          key: ${{ runner.os }}-presto-native-images-${{ env.VERSION }}

      - name: Try load cached images
        run: |
          if [ -f "/tmp/deps-image.tar" ]; then
            docker load --input /tmp/deps-image.tar || true
          fi
          if [ -f "/tmp/runtime-image.tar" ]; then
            docker load --input /tmp/runtime-image.tar || true
          fi

      - name: Build Dependency Image
        working-directory: presto-native-execution
        run: |
          if ! docker images | grep -q "prestissimo-centos-native-dependency"; then
            docker compose build centos-native-dependency
            docker save prestissimo-centos-native-dependency:latest -o /tmp/deps-image.tar
          fi

      - name: Build Runtime Image
        working-directory: presto-native-execution
        run: |
          if ! docker images | grep -q "prestissimo-centos-native-runtime"; then
            docker compose build centos-native-runtime
            docker save docker.io/presto/prestissimo-runtime:centos9 -o /tmp/runtime-image.tar
          fi

      - name: Add release tag
        working-directory: presto-native-execution
        run: |
          docker tag docker.io/presto/prestissimo-runtime:centos9 ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          if [[ "${{ github.event.inputs.publish_as_latest }}" == "true" ]]; then
            docker tag docker.io/presto/prestissimo-runtime:centos9 ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
          fi

      - name: Push to DockerHub
        run: |
          docker push ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          if [[ "${{ github.event.inputs.publish_as_latest }}" == "true" ]]; then
            docker tag ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
            docker push ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
          fi

      - name: Tag and push to GitHub Packages
        run: |
          docker tag ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          if [[ "${{ github.event.inputs.publish_as_latest }}" == "true" ]]; then
            docker tag ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          fi
