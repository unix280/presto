name: Presto Stable - Publish Native Docker Image

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version (e.g., 0.291)'
        required: true
      publish_as_latest:
        description: 'Also publish as latest version'
        type: boolean
        default: true
        required: false

env:
  VERSION: ${{ github.event.inputs.version }}
  ORG_NAME: unidevel
  IMAGE_NAME: presto-native

jobs:
  build-and-publish:
    runs-on: ubuntu-latest
    environment: release
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ env.VERSION }}
          submodules: true

      - name: Initialize Prestissimo submodules
        run: |
          cd presto-native-execution && make submodules

      - name: Setup tmate session
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true

      - name: Login to DockerHub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3.3.0
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Cache Docker layers
        uses: actions/cache@v4
        with:
          path: |
            /tmp/.buildx-cache-deps
            /tmp/.buildx-cache-runtime
          key: ${{ runner.os }}-presto-native-${{ env.VERSION }}

      - name: Build Dependency Image
        working-directory: presto-native-execution
        run: |
          if ! docker compose build --cache-from type=local,src=/tmp/.buildx-cache-deps --cache-to type=local,dest=/tmp/.buildx-cache-deps-new,mode=max centos-native-dependency; then
            echo "Cache miss or build failed, building from scratch..."
            docker compose build --cache-to type=local,dest=/tmp/.buildx-cache-deps-new,mode=max centos-native-dependency
          fi
          rm -rf /tmp/.buildx-cache-deps
          mv /tmp/.buildx-cache-deps-new /tmp/.buildx-cache-deps

      - name: Build Runtime Image
        working-directory: presto-native-execution
        run: |
          if ! docker compose build --cache-from type=local,src=/tmp/.buildx-cache-runtime --cache-to type=local,dest=/tmp/.buildx-cache-runtime-new,mode=max centos-native-runtime; then
            echo "Cache miss or build failed, building from scratch..."
            docker compose build --cache-to type=local,dest=/tmp/.buildx-cache-runtime-new,mode=max centos-native-runtime
          fi
          rm -rf /tmp/.buildx-cache-runtime
          mv /tmp/.buildx-cache-runtime-new /tmp/.buildx-cache-runtime

      - name: Add release tag
        working-directory: presto-native-execution
        run: |
          docker tag prestissimo-centos-native-runtime:latest ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          if [[ "${{ github.event.inputs.publish_as_latest }}" == "true" ]]; then
            docker tag prestissimo-centos-native-runtime:latest ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
          fi

      - name: Push to DockerHub
        run: |
          docker push ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          if [[ "${{ github.event.inputs.publish_as_latest }}" == "true" ]]; then
            docker tag ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
            docker push ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:latest
          fi

      - name: Tag and push to GitHub Packages
        run: |
          docker tag ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }}
          if [[ "${{ github.event.inputs.publish_as_latest }}" == "true" ]]; then
            docker tag ${{ env.ORG_NAME }}/${{ env.IMAGE_NAME }}:${{ env.VERSION }} ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
            docker push ghcr.io/${{ github.repository_owner }}/${{ env.IMAGE_NAME }}:latest
          fi
